data_all <- merge.data.table(data_all, dt_pop, by="District Name", all=TRUE)
View(data_all)
ggplot(data_all, aes(`Number of Immigrants`, Accidents, label=`District Name`)) + geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method =lm)
View(data_all)
data_all<-data_all%>%mutate(`Number of Immigrants`=`Number of Immigrants`/ `total_pop`)
dt<- fread("~arda/Documents/WiSe21-22/R/CaseStudy/data/immigrants_by_nationality.csv")
dt_acc<- fread("~arda/Documents/WiSe21-22/R/CaseStudy/data/accidents_2017.csv")
class(dt)
dt <- dt[Nationality != "Spain"]
dt_2 <- dt[Year == 2017, .(`Number of Immigrants` = sum(Number)), by = (`District Name`)]
dt_2 <- subset(dt_2, `District Name` != "No consta")
### Total pop by district ###
dt_pop <- fread("~arda/Documents/WiSe21-22/R/CaseStudy/data/population.csv")
dt_pop <- dt_pop[Year == 2017, .(total_pop = sum(Number)), by = (`District.Name`)]
colnames(dt_pop)[colnames(dt_pop) == "District.Name"] <- "District Name" # Rename column
#dt_acc <- dt_acc[, c("District Name", "Weekday")]
dt_acc <- subset(dt_acc, `District Name` != "Unknown")
dt_acc <- dt_acc[, .(`Accidents`=.N), by= `District Name`]
data_all <- merge.data.table(dt_2, dt_acc, by="District Name", all=TRUE)
data_all <- merge.data.table(data_all, dt_pop, by="District Name", all=TRUE)
data_all<-data_all%>%mutate(`Number of Immigrants`=`Number of Immigrants`/ `total_pop`)
ggplot(data_all, aes(`Number of Immigrants`, Accidents, label=`District Name`)) + geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method =lm)
cor.test(data_all$`Number of Immigrants`, data_all$`Accidents`, method="pearson")
cor.test(data_all$`Number of Immigrants`, data_all$`Accidents`, method="spearman")
help("function")
data_all[data_all$`Number of Immigrants` = data_all$`Number of Immigrants`/data_all$total_pop]
data_all[data_all$`Number of Immigrants` == data_all$`Number of Immigrants`/data_all$total_pop]
View(data_all)
#colnames(data_all) <- c("District Name", "Number of Immigrants", "Accidents")
data_all$new <- data_all$`Number of Immigrants`/data_all$total_pop
View(data_all)
dt<- fread("~arda/Documents/WiSe21-22/R/CaseStudy/data/immigrants_by_nationality.csv")
dt_acc<- fread("~arda/Documents/WiSe21-22/R/CaseStudy/data/accidents_2017.csv")
class(dt)
dt <- dt[Nationality != "Spain"]
dt_2 <- dt[Year == 2017, .(`Number of Immigrants` = sum(Number)), by = (`District Name`)]
dt_2 <- subset(dt_2, `District Name` != "No consta")
### Total pop by district ###
dt_pop <- fread("~arda/Documents/WiSe21-22/R/CaseStudy/data/population.csv")
dt_pop <- dt_pop[Year == 2017, .(total_pop = sum(Number)), by = (`District.Name`)]
colnames(dt_pop)[colnames(dt_pop) == "District.Name"] <- "District Name" # Rename column
# Accidents
dt_acc <- dt_acc[, `Weekday` := factor(`Weekday`, levels=c('Monday','Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'))]
dt_acc <- dt_acc[, `District Name` := factor(`District Name`)]
#dt_acc <- dt_acc[, c("District Name", "Weekday")]
dt_acc <- subset(dt_acc, `District Name` != "Unknown")
dt_acc <- dt_acc[, .(`Accidents`=.N), by= `District Name`]
data_all <- merge.data.table(dt_2, dt_acc, by="District Name", all=TRUE)
data_all <- merge.data.table(data_all, dt_pop, by="District Name", all=TRUE)
data_all[data_all$`Number of Immigrants` == data_all$`Number of Immigrants`/data_all$total_pop]
#colnames(data_all) <- c("District Name", "Number of Immigrants", "Accidents")
data_all$ratio_imm_pop <- data_all$`Number of Immigrants`/data_all$total_pop
View(data_all)
ggplot(data_all, aes(`Number of Immigrants`, Accidents, label=`District Name`)) + geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method =lm)
ggplot(data_all, aes(`ratio_imm_pop`, Accidents, label=`District Name`)) + geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method =lm)
cor.test(data_all$`Number of Immigrants`, data_all$`Accidents`, method="pearson")
cor.test(data_all$`Number of Immigrants`, data_all$`Accidents`, method="spearman")
### BIRTHS ###
dt_birth <- fread("~arda/Documents/WiSe21-22/R/CaseStudy/data/births.csv")
dt_birth <- dt_birth[Year == 2017, sum(Number), by = (`District Name`)]
data_comb <- merge.data.table(dt_birth, dt_2, by="District Name", all=TRUE)
colnames(data_comb) <- c("District Name", "Births", "Number of Immigrants")
ggplot(data_comb, aes(`ratio_imm_pop`, Births, label=`District Name`))+ geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method=lm)
data_comb$ratio_imm_pop <- data_comb$`Number of Immigrants`/data_all$total_pop
ggplot(data_comb, aes(`ratio_imm_pop`, Births, label=`District Name`))+ geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method=lm)
cor.test(data_comb$`Number of Immigrants`, data_comb$`Births`, method="pearson")
cor.test(data_comb$`Number of Immigrants`, data_comb$`Births`, method="spearman")
ggplot(data_all, aes(`ratio_imm_pop`, Accidents, label=`District Name`)) + geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method =lm)
ggplot(data_comb, aes(`ratio_imm_pop`, Births, label=`District Name`))+ geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method=lm)
ggplot(data_all, aes(`ratio_imm_pop`, Accidents, label=`District Name`))  + geom_text_repel() + geom_smooth(method =lm)
ggplot(data_all, aes(`ratio_imm_pop`, Accidents, label=`District Name`))  + geom_text_repel()
_repel
ggplot(data_all, aes(`ratio_imm_pop`, Accidents, label=`District Name`)) + geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method =lm)
library(data.table)
library(ggplot2)
library(tidyr)
library(ggrepel)
dt<- fread("~arda/Documents/WiSe21-22/R/CaseStudy/data/immigrants_by_nationality.csv")
dt_acc<- fread("~arda/Documents/WiSe21-22/R/CaseStudy/data/accidents_2017.csv")
class(dt)
dt <- dt[Nationality != "Spain"]
dt_2 <- dt[Year == 2017, .(`Number of Immigrants` = sum(Number)), by = (`District Name`)]
dt_2 <- subset(dt_2, `District Name` != "No consta")
### Total pop by district ###
dt_pop <- fread("~arda/Documents/WiSe21-22/R/CaseStudy/data/population.csv")
dt_pop <- dt_pop[Year == 2017, .(total_pop = sum(Number)), by = (`District.Name`)]
colnames(dt_pop)[colnames(dt_pop) == "District.Name"] <- "District Name" # Rename column
# Accidents
dt_acc <- dt_acc[, `Weekday` := factor(`Weekday`, levels=c('Monday','Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'))]
dt_acc <- dt_acc[, `District Name` := factor(`District Name`)]
#dt_acc <- dt_acc[, c("District Name", "Weekday")]
dt_acc <- subset(dt_acc, `District Name` != "Unknown")
dt_acc <- dt_acc[, .(`Accidents`=.N), by= `District Name`]
data_all <- merge.data.table(dt_2, dt_acc, by="District Name", all=TRUE)
data_all <- merge.data.table(data_all, dt_pop, by="District Name", all=TRUE)
data_all[data_all$`Number of Immigrants` == data_all$`Number of Immigrants`/data_all$total_pop]
#colnames(data_all) <- c("District Name", "Number of Immigrants", "Accidents")
data_all$ratio_imm_pop <- data_all$`Number of Immigrants`/data_all$total_pop
ggplot(data_all, aes(`ratio_imm_pop`, Accidents, label=`District Name`)) + geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method =lm)
ggplot(data_comb, aes(`ratio_imm_pop`, Births, label=`District Name`))+ geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method=lm)
ggplot(data_all, aes(`ratio_imm_pop`, Accidents, label=`District Name`)) + geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method =lm)
ggplot(data_comb, aes(`ratio_imm_pop`, Births, label=`District Name`))+ geom_point(stat = 'identity') + geom_text_repel() + geom_smooth(method=lm)
View(dt_pop)
View(dt_birth)
View(dt_acc)
View(data_comb)
View(data_all)
## Load all the needed libraries. No need to include this in your compiled pdf document so we set echo=FALSE
library(data.table)
library(ggplot2)
library(tidyr)
library(dplyr)
library(datasets)
library(ggrepel)
## Load the file(s)
rent <- fread('./Barcelona/rent.csv')
income <- fread('./Barcelona/rent.csv')
## Observe the first and last rows and str of the dataset(s)
head(rent)
str(rent)
head(income)
str(income)
library(leaflet)
library(leaflet.extras)
library(gridExtra)
library(knitr)
# Map
leaflet() %>%
# addTiles()
addTiles() %>%
addResetMapButton() %>%
# Add marker layer for each sector with corresponding group name
# Morning
addCircleMarkers(data=dt %>% filter(`Time of the day`=="Morning"), color="green",
group="Morning", radius=5, popup=~paste0("<b>", `District Name`,"</b>", "<br/>",
"Month: ", Month, "<br/>",
"Weekday: ", Weekday, "<br/>",
"Hour: ", Hour)) %>%
# Afternoon
addCircleMarkers(data=dt %>% filter(`Time of the day`=="Afternoon"), color="orange",
group="Afternoon", radius=5, popup=~paste0("<b>", `District Name`,"</b>", "<br/>",
"Month: ", Month, "<br/>",
"Weekday: ", Weekday, "<br/>",
"Hour: ", Hour)) %>%
# Night
addCircleMarkers(data=dt %>% filter(`Time of the day`=="Night"), color="blue",
group="Night", radius=5, popup=~paste0("<b>", `District Name`,"</b>", "<br/>",
"Month: ", Month, "<br/>",
"Weekday: ", Weekday, "<br/>",
"Hour: ", Hour)) %>%
# Add layer controls for base and overlay groups
addLayersControl(overlayGroups=c("Morning", "Afternoon", "Night"),
baseGroups=c("OSM", "BlackAndWhite", "Esri")) %>%
# Add legend
addLegend(position="bottomleft",
colors=c("green", "orange", "blue"),
labels=c("Morning", "Afternoon", "Night"))
population_dt <- fread("./Barcelona/population.csv")
unemployment_dt <- fread("./Barcelona/unemployment.csv")
immi_by_na_dt <- fread("./Barcelona/immigrants_by_nationality.csv")
immi_emi_by_age_dt <- fread("~arda/Documents/WiSe21-22/R/CaseStudy/Barcelona/immigrants_emigrants_by_age.csv")
immi_emi_by_dest_dt <- fread("./Barcelona/immigrants_emigrants_by_destination.csv")
immi_emi_by_dest_dt2 <- fread("./Barcelona/immigrants_emigrants_by_destination2.csv")
immi_emi_by_sex_dt <- fread("./Barcelona/immigrants_emigrants_by_sex.csv")
births_dt <- fread("./Barcelona/births.csv")
population_dt <- fread("./Barcelona/population.csv")
unemployment_dt <- fread("./Barcelona/unemployment.csv")
immi_by_na_dt <- fread("./Barcelona/immigrants_by_nationality.csv")
immi_emi_by_age_dt <- fread("~arda/Documents/WiSe21-22/R/CaseStudy/Barcelona/immigrants_emigrants_by_age.csv")
immi_emi_by_dest_dt <- fread("./Barcelona/immigrants_emigrants_by_destination.csv")
immi_emi_by_dest_dt2 <- fread("./Barcelona/immigrants_emigrants_by_destination2.csv")
immi_emi_by_sex_dt <- fread("./Barcelona/immigrants_emigrants_by_sex.csv")
births_dt <- fread("./Barcelona/births.csv")
unemployment_immi <- population_dt[Year==2017 & Age %in% c("15-19","20-24","25-29","30-34","35-39","40-44",
"45-49","50-54","55-59"), .(work_population = sum(Number)), by=District.Name]
unemployment_immi[, total_population := population_dt[Year==2017, .(total_population = sum(Number)), by=District.Name]$total_population ]
unemployment_immi[, immigrants := immi_emi_by_age_dt[Year==2017 & `District Name`!="No consta", .(immigrants=sum(Immigrants)), by=`District Name`]$immigrants]
unemployment_immi[, emigrants := immi_emi_by_age_dt[Year==2017 & `District Name`!="No consta", .(emigrants=sum(Emigrants)), by=`District Name`]$emigrants]
unemployment_immi[, unemployed := unemployment_dt[Year==2017 & Month=="December" & `District Name`!="No consta", .(sum = sum(Number)), by = `District Name`]$sum]
unemployment_immi[, births := births_dt[Year==2017, .(sum=sum(Number)), by=`District Name`]$sum]
unemployment_immi[, unemployed_ratio := unemployed/work_population]
unemployment_immi[, immigrants_ratio := immigrants/total_population]
unemployment_immi[, emigrants_ratio := emigrants/total_population]
ggplot(unemployment_immi, aes(unemployed_ratio, immigrants_ratio, label=District.Name)) +
geom_point() +
geom_smooth(method = lm)+
geom_text_repel()
ggplot(unemployment_immi, aes(unemployed_ratio,emigrants_ratio, label=District.Name)) +
geom_point() +
geom_smooth(method = lm)+
geom_text_repel()
ggplot(unemployment_immi, aes(immigrants_ratio, emigrants_ratio, label=District.Name)) +
geom_point() +
geom_smooth(method = lm)+
geom_text_repel()
ggplot(unemployment_immi, aes(unemployed_ratio, births, label=District.Name)) +
geom_point() +
geom_smooth(method = lm)+
geom_text_repel()
ggplot(unemployment_immi, aes(unemployed, births, label=District.Name)) +
geom_point() +
geom_smooth(method = lm) +
geom_text_repel()
cor.test(unemployment_immi$unemployed_ratio, unemployment_immi$immigrants_ratio, method="spearman")
cor.test(unemployment_immi$unemployed_ratio, unemployment_immi$emigrants_ratio, method="spearman")
cor.test(unemployment_immi$immigrants_ratio, unemployment_immi$emigrants_ratio, method="spearman")
cor.test(unemployment_immi$unemployed_ratio, unemployment_immi$births, method="spearman")
rent <- fread("./Barcelona/rent.csv")
rent[, .(ave_rent = ave(Preu, na.rm=TRUE)), by = Nom_Barri]
income <- fread('./Barcelona/income_2017.csv')
## Load the file(s)
rent <- fread('./Barcelona/rent.csv')
income <- fread('./Barcelona/income_2017.csv')
colnames(income) <- c("Year", "District Code", "District Name", "Neighborhood Code", "Neighborhood Name", "Population", "Index")
colnames(rent) <- c("Year", "Quarter", "District Code", "District Name", "Neighborhood Code", "Neighborhood Name", "Measurement", "Price")
## Observe the first and last rows and str of the dataset(s)
head(rent)
str(rent)
head(income)
str(income)
unique(rent$Codi_Barri)
unique(income$Codi_Barri)
rent <- rent[Measurement=="Lloguer mitjà per superfície (Euros/m2 mes)"]
rent_clean <- rent %>% drop_na()
immi_by_na_dt[rowSums(is.na(immi_by_na_dt))>0, ]
immi_clean <- immi_by_na_dt[`Neighborhood Code` %in% unique(rent_clean$`Neighborhood Code`)]
ave_rent <- distinct(rent_clean[, .(ave_rent = ave(Price)), by = `Neighborhood Code`])
immi_sum <- immi_clean[, .(Immigrants = sum(Number)), by = `Neighborhood Code`]
#merge(rent, immi_by_na_dt, by=`Neighborhood Code`)
rent_immi <- merge(ave_rent, immi_sum, by = "Neighborhood Code")
pop_clean <- population_dt[`Neighborhood.Code` %in% unique(rent_clean$`Neighborhood Code`)]
rent_immi[, total_population := pop_clean[Year==2017, .(total_population = sum(Number)), by=Neighborhood.Code]$total_population ]
rent_immi[, immigrants_ratio := Immigrants/total_population]
income_clean <- income[`Neighborhood Code` %in% unique(rent_clean$`Neighborhood Code`), .(`Neighborhood Code`, Index)]
rent_immi <- merge(rent_immi, income_clean, by = "Neighborhood Code")
unemployment <- population_dt[Year==2017 & Age %in% c("15-19","20-24","25-29","30-34","35-39","40-44",
"45-49","50-54","55-59"), .(work_population = sum(Number)), by=Neighborhood.Code]
unemployment[, unemployed := unemployment_dt[Year==2017 & Month=="December" & `District Name`!="No consta" & Demand_occupation == "Registered unemployed", .(sum = sum(Number)), by = `Neighborhood Code`]$sum]
unemployment[, unemployment_ratio := unemployed/work_population]
#unemployment_clean <- unemployment[`Neighborhood.Code` %in% unique(rent_immi$`Neighborhood Code`)]
colnames(unemployment)[1] <- "Neighborhood Code"
unemployment <- unemployment[`Neighborhood Code` %in% unique(rent_clean$`Neighborhood Code`)]
rent_immi <- merge(rent_immi, unemployment, by = "Neighborhood Code")
ggplot(rent_immi, aes(ave_rent, Index)) +
geom_point() +
geom_smooth(method = lm)
cor.test(rent_immi$Index, rent_immi$ave_rent, method="spearman")
cor.test(rent_immi$Index, rent_immi$ave_rent, method="pearson")
rent_new <- rent_immi[Index>=100]
ggplot(rent_new, aes(ave_rent, immigrants_ratio)) +
geom_point() +
geom_smooth(method = lm)
cor.test(rent_new$ave_rent, rent_new$immigrants_ratio, method="spearman")
cor.test(rent_new$ave_rent, rent_new$immigrants_ratio, method="pearson")
ggplot(rent_immi, aes(Index, immigrants_ratio)) +
geom_point() +
geom_smooth(method = lm)
cor.test(rent_immi$Index, rent_immi$immigrants_ratio, method="spearman")
cor.test(rent_immi$Index, rent_immi$immigrants_ratio, method="pearson")
rent_new <- rent_immi[ave_rent<ave(ave_rent)]
ggplot(rent_new, aes(Index, immigrants_ratio)) +
geom_point() +
geom_smooth(method = lm)
cor.test(rent_new$Index, rent_new$immigrants_ratio, method="spearman")
cor.test(rent_new$Index, rent_new$immigrants_ratio, method="pearson")
ggplot(rent_immi, aes(immigrants_ratio, ave_rent)) +
geom_point() +
geom_smooth(method = lm)
cor.test(rent_immi$immigrants_ratio, rent_immi$ave_rent, method="spearman")
cor.test(rent_immi$immigrants_ratio, rent_immi$ave_rent, method="pearson")
View(rent_immi)
View(rent_immi)
ggplot(rent_immi, aes(Immigrants)) + geom_histogram()
View(rent_immi)
ggplot(rent_immi, aes(ave_rent)) + geom_histogram()
ggplot(rent_immi, aes(ave_rent)) + geom_boxplot()
ggplot(rent_immi, aes(income)) + geom_boxplot()
View(rent_immi)
ggplot(rent_immi, aes(Immigrants)) + geom_histogram()
ggplot(rent_immi, aes(ave_rent)) + geom_histogram(bins=10)
View(rent_clean)
## Load the file(s)
population_dt <- fread("./Barcelona/population.csv")
setwd("~/Documents/WiSe21-22/R/CaseStudy")
## Load the file(s)
population_dt <- fread("./Barcelona/population.csv")
setwd("~/Documents/WiSe21-22/R/CaseStudy/Barcelona")
## Load the file(s)
population_dt <- fread("./Barcelona/population.csv")
## Load all the needed libraries. No need to include this in your compiled pdf document so we set echo=FALSE
library(data.table)
library(ggplot2)
library(tidyr)
library(dplyr)
library(datasets)
library(ggrepel)
## Load the file(s)
population_dt <- fread("./Barcelona/population.csv")
immi_by_na_dt <- fread("./Barcelona/immigrants_by_nationality.csv")
rent <- fread('./Barcelona/rent.csv')
income_index <- fread('./Barcelona/income_index_2017.csv')
income <- fread('./Barcelona/income_2017.csv')
#rename the column names to English
colnames(income_index) <- c("Year", "District Code", "District Name", "Neighborhood Code", "Neighborhood Name", "Population", "Index")
colnames(income) <- c("Year", "District Code", "District Name", "Neighborhood Code", "Neighborhood Name", "Income")
colnames(rent) <- c("Year", "Quarter", "District Code", "District Name", "Neighborhood Code", "Neighborhood Name", "Measurement", "Price")
## Observe the first and last rows and str of the dataset(s)
head(rent)
str(rent)
head(income)
str(income)
head(income_index)
ave_global <- ave(rent_immi$ave_rent)[1]
median_global <- median(rent_immi$ave_rent)
ggplot(rent_immi, aes(x=`District Name`, y=ave_rent)) +
geom_boxplot() +
geom_point() +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
labs(x = "District Name", y = "Average Rent", title = "Rent Distribution by District") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_hline(yintercept = ave_global, linetype="dashed", color="red")
## Load the file(s)
population_dt <- fread("./Barcelona/population.csv")
immi_by_na_dt <- fread("./Barcelona/immigrants_by_nationality.csv")
rent <- fread('./Barcelona/rent.csv')
income_index <- fread('./Barcelona/income_index_2017.csv')
income <- fread('./Barcelona/income_2017.csv')
#rename the column names to English
colnames(income_index) <- c("Year", "District Code", "District Name", "Neighborhood Code", "Neighborhood Name", "Population", "Index")
colnames(income) <- c("Year", "District Code", "District Name", "Neighborhood Code", "Neighborhood Name", "Income")
colnames(rent) <- c("Year", "Quarter", "District Code", "District Name", "Neighborhood Code", "Neighborhood Name", "Measurement", "Price")
## Observe the first and last rows and str of the dataset(s)
head(rent)
str(rent)
head(income)
str(income)
head(income_index)
#subset the rent data table, using only the Euros/m2 rent
rent <- rent[Measurement=="Lloguer mitjà per superfície (Euros/m2 mes)"]
#drop the missing values, after this step we have the rent data for 70 neighborhoods, drop 3 neighborhoods
rent_clean <- rent %>% drop_na()
#check for missing values in the data table, should be repeated for other tables
#TODO
immi_by_na_dt[rowSums(is.na(immi_by_na_dt))>0, ]
#make sure that we also drop these 3 neighborhoods with missing value in other data tables we're gonna use
immi_clean <- immi_by_na_dt[`Neighborhood Code` %in% unique(rent_clean$`Neighborhood Code`)]
#calculate the average rent / neighborhood
ave_rent <- distinct(rent_clean[, .(ave_rent = ave(Price)), by = `Neighborhood Code`])
#calculate the number of immigrants / neighborhood
immi_sum <- immi_clean[, .(Immigrants = sum(Number)), by = `Neighborhood Code`]
rent_immi <- merge(ave_rent, immi_sum, by = "Neighborhood Code")
#add district name to the table for further use
district_code <- rent_clean[, .(`Neighborhood Code`, `District Name`)]
rent_immi <- distinct(merge(rent_immi, district_code, by = "Neighborhood Code"))
#calculate total population / neighborhood
pop_clean <- population_dt[`Neighborhood.Code` %in% unique(rent_clean$`Neighborhood Code`)]
rent_immi[, total_population := pop_clean[Year==2017, .(total_population = sum(Number)), by=Neighborhood.Code]$total_population ]
#calculate the number of immigrants / total population
rent_immi[, immigrants_ratio := Immigrants/total_population]
#add income index to the table
income_index_clean <- income_index[`Neighborhood Code` %in% unique(rent_clean$`Neighborhood Code`), .(`Neighborhood Code`, Index)]
rent_immi <- merge(rent_immi, income_index_clean, by = "Neighborhood Code")
#add the disposable household income per capita to the table
income_clean <- income[`Neighborhood Code` %in% unique(rent_clean$`Neighborhood Code`), .(`Neighborhood Code`, Income)]
rent_immi <- merge(rent_immi, income_clean, by = "Neighborhood Code")
#descriptive plot, immigrants
ggplot(rent_immi, aes(Immigrants)) + geom_histogram(bins=20) +
labs(title = "Histogram of Immigrants per Neighborhood") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(rent_immi, aes(Immigrants, fill=`District Name`)) +
geom_histogram(bins = 20) +
labs(title = "Histogram of Immigrants per Neighborhood by District")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(rent_immi, aes(immigrants_ratio)) + geom_histogram(bins=20) +
labs(title = "Histogram of Immigrants Ratio per Neighborhood")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(rent_immi, aes(Index)) + geom_histogram(bins=30) +
labs(title = "Histogram of Neighborhood Income Index")+
theme(plot.title = element_text(hjust = 0.5))
ave_income <- ave(rent_immi$Income)[1]
ggplot(rent_immi, aes(Income)) + geom_histogram(bins=30) +
labs(title = "Histogram of Neighborhood Income")+
geom_vline(xintercept = ave_income, linetype="dashed", color="red") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(rent_immi, aes(ave_rent, fill=`District Name`)) + geom_histogram(bins=15) +
labs(title = "Histogram of Neighborhood Average Rent")+
theme(plot.title = element_text(hjust = 0.5))
ave_global <- ave(rent_immi$ave_rent)[1]
median_global <- median(rent_immi$ave_rent)
ggplot(rent_immi, aes(x=`District Name`, y=ave_rent)) +
geom_boxplot() +
geom_point() +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
labs(x = "District Name", y = "Average Rent", title = "Rent Distribution by District") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_hline(yintercept = ave_global, linetype="dashed", color="red")
#geom_jitter()
#geom_violin()
ggplot(rent_immi, aes(x=`District Name`, y=Income)) +
geom_boxplot() +
geom_point() +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
labs(x = "District Name", y = "Average Household Income", title = "Income Distribution by District") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_hline(yintercept = ave_income, linetype="dashed", color="red")
ggplot(rent_immi, aes(x=`District Name`, y=Index)) +
geom_boxplot() +
geom_point() +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
labs(x = "District Name", y = "Income Index", title = "Income Distribution by District") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(rent_immi, aes(x=`District Name`, y=Immigrants)) +
geom_boxplot() +
geom_point() +
labs(x = "District Name", y = "Immigrants", title = "Number of Immigrants by District")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(rent_immi, aes(x=`District Name`, y=ave_rent)) +
geom_violin() + geom_point() +
labs(x = "District Name", y = "Average Rent", title = "Average Rent by District")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(rent_immi, aes(x=`District Name`, y=Immigrants)) +
#geom_bar(stat = 'identity')
geom_col() +
labs(x = "District Name", y = "Immigrants", title = "Number of Immigrants by District")
ggplot(rent_immi, aes(x=Immigrants, y=reorder(`District Name`, -Immigrants))) +
#geom_bar(stat = 'identity')
geom_col() +
labs(y = "District Name", x = "Immigrants", title = "Number of Immigrants by District") +
theme_minimal()
ggplot(rent_immi, aes(x=total_population, y=reorder(`District Name`, -total_population))) +
#geom_bar(stat = 'identity')
geom_col() +
labs(y = "District Name", x = "Population", title = "Total Population by District") +
theme_minimal()
dt <- melt(rent_immi,
id.vars = c(1, 4),
measure.vars=c("total_population", "Immigrants"),
value.name = "Number")
library(scales)
ggplot(data=dt, aes(x=`District Name`, y=Number, fill=variable)) +
geom_bar(stat="identity") +
labs(x="District", y="Number of Immigrants and Total Population", title="Number of Immigrants and Total Population by District") +
coord_flip() +
#theme_bw()+
scale_y_continuous(breaks=c(0, 100000, 200000, 300000),
labels=comma(abs(c(0, 100000, 200000, 300000)))) +
#xlim(100000, 300000) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=dt, aes(x=`District Name`, y=Number, fill=variable)) +
geom_bar(stat="identity") +
labs(x="District", y="Number of Immigrants and Total Population", title="Higher Population, More Immigrants") +
coord_flip() +
#theme_bw()+
scale_y_continuous(breaks=c(0, 100000, 200000, 300000),
labels=comma(abs(c(0, 100000, 200000, 300000)))) +
#xlim(100000, 300000) +
theme(plot.title = element_text(hjust = 0.5))
#income index
#immi and rent
#positive correlation
ggplot(rent_immi, aes(immigrants_ratio, ave_rent)) +
geom_point() +
geom_smooth(method = lm) +
labs(x="Immigrants Ratio", y="Average Rent", title="Higher the Immigrants Ratio, Higher the Average Rent") +
theme(plot.title = element_text(hjust = 0.5))
cor.test(rent_immi$immigrants_ratio, rent_immi$ave_rent, method="spearman")
cor.test(rent_immi$immigrants_ratio, rent_immi$ave_rent, method="pearson")
#stra on income index
#no correlation
rent_new <- rent_immi[Index>=100]
ggplot(rent_new, aes(immigrants_ratio, ave_rent)) +
geom_point() +
geom_smooth(method = lm)  +
labs(x="Immigrants Ratio", y="Average Rent", title="After Stratifying on Income Index") +
theme(plot.title = element_text(hjust = 0.5))
cor.test(rent_new$ave_rent, rent_new$immigrants_ratio, method="spearman")
cor.test(rent_new$ave_rent, rent_new$immigrants_ratio, method="pearson")
#income index and rent
#positive correlation
ggplot(rent_immi, aes(ave_rent, Index)) +
geom_point() +
geom_smooth(method = lm)
cor.test(rent_immi$Index, rent_immi$ave_rent, method="spearman")
cor.test(rent_immi$Index, rent_immi$ave_rent, method="pearson")
#stra on immi
#still correalted
rent_new <- rent_immi[immigrants_ratio>=ave(immigrants_ratio)]
ggplot(rent_new, aes(ave_rent, Index)) +
geom_point() +
geom_smooth(method = lm)
cor.test(rent_new$Index, rent_new$ave_rent, method="spearman")
cor.test(rent_new$Index, rent_new$ave_rent, method="pearson")
#disposable income
#income and rent, positive relation
ggplot(rent_immi, aes(Income, ave_rent)) +
geom_point() +
geom_smooth(method = lm) +
labs(x="Income", y="Average Rent", title="The Higher the Income, the Higher the Average Rent") +
theme(plot.title = element_text(hjust = 0.5))
cor.test(rent_immi$Income, rent_immi$ave_rent, method="spearman")
cor.test(rent_immi$Income, rent_immi$ave_rent, method="pearson")
#stra on immi,
#ambiguous, spearman p=0.06, pearson p=0,03
rent_new <- rent_immi[immigrants_ratio>=ave(immigrants_ratio)]
ggplot(rent_new, aes(total_population, ave_rent)) +
geom_point() +
geom_smooth(method = lm) +
labs(x="Income", y="Average Rent", title="After Stratifying on Immigrants Ratio, the Correlation still exists") +
theme(plot.title = element_text(hjust = 0.5))
cor.test(rent_new$ave_rent, rent_new$Income, method="spearman")
cor.test(rent_new$ave_rent, rent_new$Income, method="pearson")
cor.test(rent_new$ave_rent, rent_new$Income, method="kendall")
